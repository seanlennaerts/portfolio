{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["library","add","faGithub","faLinkedin","faFile","videos","mobile","Social","props","react_default","a","createElement","href","link","target","newTab","rel","className","react_fontawesome_index_es","icon","prefix","text","Tag","style","backgroundColor","colors","name","toLowerCase","Card","type","source","muted","loop","playsInline","poster","concat","src","buildVideo","sourceType","description","tags","t","forEach","tag","push","buildTags","playing","handleScroll","_loop","i","top","offsetTop","height","offsetHeight","bottom","Math","max","min","window","pageYOffset","innerHeight","playPromise","play","undefined","then","pause","length","App","navigator","platform","test","document","getElementsByTagName","projectsWidth","parseInt","getComputedStyle","getElementById","width","cardWidth","getElementsByClassName","offsetWidth","round","addEventListener","throttle","count","total","projects","project","hasOwnProperty","spans","key","background","buildRainbow","id","cards","buildProjectCards","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2a0ce41.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { throttle } from 'lodash';\nimport './App.css';\nimport projects from './projects.json';\nimport colors from './colors.json';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faFile } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faGithub, faLinkedin, faFile);\nvar mobile = false;\n\n//https://api.gfycat.com/v1/gfycats/\n\nfunction Social(props) {\n  return (\n    <a\n      href={props.link}\n      target={props.newTab ? \"_blank\" : \"\"}\n      rel={props.newTab ? \"noopener noreferrer\" : \"\"}\n    >\n      <div className=\"social\">\n        <FontAwesomeIcon icon={[props.prefix, props.icon]} />\n        {props.text}\n      </div>\n    </a>\n  );\n}\n\nfunction Tag(props) {\n  return (\n    <div\n      className=\"tag\"\n      style={{ backgroundColor: colors[props.name.toLowerCase()] }}\n    >\n      {props.name}\n    </div>\n  );\n}\n\nfunction buildTags(tags) {\n  let t = [];\n  tags.forEach((tag) => {\n    t.push(\n      <Tag\n        name={tag}\n      />\n    )\n  });\n  return t;\n}\n\nfunction buildVideo(type, source) {\n  switch (type) {\n    case 'gfy':\n      return (\n        <video\n          muted\n          loop\n          playsInline\n          poster={`https://thumbs.gfycat.com/${source}-mobile.jpg`}\n        >\n          <source src={mobile ? `https://thumbs.gfycat.com/${source}-mobile.mp4` : `https://giant.gfycat.com/${source}.webm`} />\n        </video>\n      );\n    case 'ios':\n      return (\n        <div className=\"ios\">\n          <video\n            muted\n            loop\n            playsInline\n            poster={`https://thumbs.gfycat.com/${source}-mobile.jpg`}\n          >\n            <source src={mobile ? `https://thumbs.gfycat.com/${source}-mobile.mp4` : `https://giant.gfycat.com/${source}.webm`} />\n          </video>\n        </div>\n      );\n    default:\n      return;\n  }\n}\n\nfunction Card(props) {\n  return (\n    <a\n      href={props.link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"card\">\n        {buildVideo(props.sourceType, props.source)}\n        <div className=\"card-body\">\n          <h2>{props.name}</h2>\n          <p>{props.description}</p>\n          <div className=\"tags\">\n            {buildTags(props.tags)}\n          </div>\n        </div>\n      </div>\n    </a>\n  );\n}\n\nfunction buildProjectCards() {\n  let cards = []\n  projects.forEach((project) => {\n    cards.push(\n      <Card\n        sourceType={project.sourceType}\n        source={project.source}\n        name={project.name}\n        link={project.link}\n        description={project.description}\n        tags={project.tags}\n      />\n    );\n  });\n  return cards;\n}\n\nfunction buildRainbow() {\n  let count = {};\n  let total = 0;\n  projects.forEach((project) => {\n    project.tags.forEach((tag) => {\n      total++;\n      if (!count.hasOwnProperty(tag)) {\n        count[tag] = 1;\n      } else {\n        count[tag] = count[tag] + 1;\n      }\n    });\n  });\n  let spans = [];\n  for (let key in count) {\n    spans.push(\n      <span\n        style={{\n          width: `${count[key] / total * 100}%`,\n          background: colors[key.toLowerCase()]\n        }}>\n      </span>\n    );\n  }\n  return spans;\n}\n\nvar videos;\nvar playing = [];\n\nfunction setPlaying(index) {\n  playing[index] = true;\n}\n\nfunction handleScroll() {\n  for (let i = 0; i < videos.length; i++) {\n    let top = videos[i].offsetTop;\n    let height = videos[i].offsetHeight;\n    let bottom = top + height;\n\n    let visibleY = Math.max(0, Math.min(height, window.pageYOffset + window.innerHeight - top, bottom - window.pageYOffset));\n    // let visible = visibleY / height;\n\n    if (visibleY > 100) {\n      if (!playing[i]) {\n        let playPromise = videos[i].play();\n        if (playPromise !== undefined) {\n          playPromise.then(() => setPlaying(i));\n        }\n      }\n    } else {\n      if (playing[i]) {\n        videos[i].pause();\n        playing[i] = false;\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  componentWillMount() {\n    mobile = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n  }\n\n  componentDidMount() {\n    videos = document.getElementsByTagName('video');\n\n    let projectsWidth = parseInt(window.getComputedStyle(document.getElementById('projects')).width);\n    let cardWidth = document.getElementsByClassName('card')[0].offsetWidth;\n\n    handleScroll(Math.round(projectsWidth / cardWidth)); //to start playing videos already in view\n    window.addEventListener('scroll', throttle(handleScroll, 1000));\n    window.addEventListener('resize', throttle(handleScroll, 1000));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1>Sean Lennaerts</h1>\n          <div className=\"socials\">\n            <Social\n              link='https://github.com/seanlennaerts'\n              prefix='fab'\n              icon='github'\n              text='/seanlennaerts'\n              newTab\n            />\n            <Social\n              link='https://www.linkedin.com/in/seanlennaerts/'\n              prefix='fab'\n              icon='linkedin'\n              text='/seanlennaerts'\n              newTab\n            />\n            <Social\n              link=''\n              prefix='fas'\n              icon='file'\n              text='Resume'\n            />\n          </div>\n        </header>\n        <div className=\"rainbow\">\n          {buildRainbow()}\n        </div>\n        <div id=\"projects\">\n          {buildProjectCards()}\n        </div>\n        <footer className=\"footer\">\n\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}